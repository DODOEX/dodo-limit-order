{
  "address": "0xB5c7BA1EAde74800cD6cf5F56b1c4562De373780",
  "abi": [
    {
      "anonymous": false,
      "inputs": [],
      "name": "Fill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferPrepared",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newReceiver",
          "type": "address"
        }
      ],
      "name": "changeReceiver",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_DODO_APPROVE_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_DODO_LIMIT_ORDER_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_NEW_OWNER_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_OWNER_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_TOKEN_RECEIVER_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddr",
          "type": "address"
        }
      ],
      "name": "addAdminList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTokenReceiver",
          "type": "address"
        }
      ],
      "name": "changeTokenReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "curTakerFillAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "curMakerFillAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "makerToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "takerToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dodoRouteProxy",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "dodoApiData",
          "type": "bytes"
        }
      ],
      "name": "doLimitOrderSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "callExternalData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "takerToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minTakerTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "fillDODOLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dodoLimitOrder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenReceiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dodoApprove",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "initOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAdminListed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddr",
          "type": "address"
        }
      ],
      "name": "removeAdminList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8038dfcfbdac3b22e0610c88b8985733af7e42dfb56eb1dfa0ab2db4e989d54e",
  "receipt": {
    "to": null,
    "from": "0xb37136B338C6cC0E459A35fe9Aa036f6b5A147c0",
    "contractAddress": "0xB5c7BA1EAde74800cD6cf5F56b1c4562De373780",
    "transactionIndex": 1,
    "gasUsed": "1025739",
    "logsBloom": "0x
    "blockHash": "0xbd9b52a780349a6224b9f93f9d7ed55b3dc838e1e8a63b0cfeff78cf32113250",
    "transactionHash": "0x8038dfcfbdac3b22e0610c88b8985733af7e42dfb56eb1dfa0ab2db4e989d54e",
    "logs": [],
    "blockNumber": 14058248,
    "cumulativeGasUsed": "1025739",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "9e299c46b5bdc8324e828cc93e5863fa",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"Fill\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferPrepared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newReceiver\",\"type\":\"address\"}],\"name\":\"changeReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_DODO_APPROVE_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_DODO_LIMIT_ORDER_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_NEW_OWNER_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_OWNER_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_TOKEN_RECEIVER_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"}],\"name\":\"addAdminList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTokenReceiver\",\"type\":\"address\"}],\"name\":\"changeTokenReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"curTakerFillAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"curMakerFillAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"makerToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dodoRouteProxy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"dodoApiData\",\"type\":\"bytes\"}],\"name\":\"doLimitOrderSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"callExternalData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"takerToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTakerTokenAmount\",\"type\":\"uint256\"}],\"name\":\"fillDODOLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dodoLimitOrder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dodoApprove\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAdminListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"}],\"name\":\"removeAdminList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DODO Breeder\",\"kind\":\"dev\",\"methods\":{},\"title\":\"DODOLimitOrderBot\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/DODOLimitOrderBot.sol\":\"DODOLimitOrderBot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"src/DODOLimitOrderBot.sol\":{\"content\":\"/*\\n    Copyright 2021 DODO ZOO.\\n    SPDX-License-Identifier: Apache-2.0\\n*/\\n\\npragma solidity 0.8.4;\\n\\nimport {InitializableOwnable} from \\\"./lib/InitializableOwnable.sol\\\";\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {SafeMath} from \\\"./lib/SafeMath.sol\\\";\\nimport {SafeERC20} from \\\"./lib/SafeERC20.sol\\\";\\n\\n/**\\n * @title DODOLimitOrderBot\\n * @author DODO Breeder\\n */\\n\\n contract DODOLimitOrderBot is InitializableOwnable {\\n    using SafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n\\n    //=============== Storage ===============\\n    address public _DODO_LIMIT_ORDER_;\\n    address public _TOKEN_RECEIVER_;\\n    address public _DODO_APPROVE_;\\n    mapping (address => bool) public isAdminListed;\\n    \\n    //=============== Event ===============\\n    event addAdmin(address admin);\\n    event removeAdmin(address admin);\\n    event changeReceiver(address newReceiver);\\n    event Fill();\\n\\n    function init(\\n        address owner, \\n        address dodoLimitOrder,\\n        address tokenReceiver,\\n        address dodoApprove\\n    ) external {\\n        initOwner(owner);\\n        _DODO_LIMIT_ORDER_ = dodoLimitOrder;\\n        _TOKEN_RECEIVER_ = tokenReceiver;\\n        _DODO_APPROVE_ = dodoApprove;\\n    }\\n     \\n     function fillDODOLimitOrder(\\n        bytes memory callExternalData, //call DODOLimitOrder\\n        address takerToken, \\n        uint256 minTakerTokenAmount\\n     ) external {\\n        require(isAdminListed[msg.sender], \\\"ACCESS_DENIED\\\");\\n        uint256 originTakerBalance = IERC20(takerToken).balanceOf(address(this));\\n\\n        (bool success, ) = _DODO_LIMIT_ORDER_.call(callExternalData);\\n        require(success, \\\"EXEC_DODO_LIMIT_ORDER_ERROR\\\");\\n\\n        uint256 takerBalance = IERC20(takerToken).balanceOf(address(this));\\n        uint256 leftTakerAmount = takerBalance.sub(originTakerBalance);\\n\\n        require(leftTakerAmount >= minTakerTokenAmount, \\\"TAKER_AMOUNT_NOT_ENOUGH\\\");\\n        \\n        IERC20(takerToken).safeTransfer(_TOKEN_RECEIVER_, leftTakerAmount);\\n        \\n        emit Fill();\\n     }\\n\\n    //call by DODOLimitOrder\\n    function doLimitOrderSwap(\\n        uint256 curTakerFillAmount,\\n        uint256 curMakerFillAmount,\\n        address makerToken, //fromToken\\n        address takerToken, //toToken\\n        address dodoRouteProxy,\\n        bytes memory dodoApiData\\n    ) external {\\n        require(msg.sender == _DODO_LIMIT_ORDER_, \\\"ACCESS_NENIED\\\");\\n        uint256 originTakerBalance = IERC20(takerToken).balanceOf(address(this));\\n     \\n        _approveMax(IERC20(makerToken), _DODO_APPROVE_, curMakerFillAmount);\\n        \\n        (bool success, ) = dodoRouteProxy.call(dodoApiData);\\n        require(success, \\\"API_SWAP_FAILED\\\");\\n\\n        uint256 takerBalance = IERC20(takerToken).balanceOf(address(this));\\n        uint256 returnTakerAmount = takerBalance.sub(originTakerBalance);\\n\\n        require(returnTakerAmount >= curTakerFillAmount, \\\"SWAP_TAKER_AMOUNT_NOT_ENOUGH\\\");\\n        \\n        _approveMax(IERC20(takerToken), _DODO_LIMIT_ORDER_, curTakerFillAmount);\\n    }\\n\\n\\n    //============  Ownable ============\\n    function addAdminList (address userAddr) external onlyOwner {\\n        isAdminListed[userAddr] = true;\\n        emit addAdmin(userAddr);\\n    }\\n\\n    function removeAdminList (address userAddr) external onlyOwner {\\n        isAdminListed[userAddr] = false;\\n        emit removeAdmin(userAddr);\\n    }\\n\\n    function changeTokenReceiver(address newTokenReceiver) external onlyOwner {\\n        _TOKEN_RECEIVER_ = newTokenReceiver;\\n        emit changeReceiver(newTokenReceiver);\\n    }\\n\\n\\n    //============  internal ============\\n    function _approveMax(IERC20 token,address to,uint256 amount) internal {\\n        uint256 allowance = token.allowance(address(this), to);\\n        if (allowance < amount) {\\n            if (allowance > 0) {\\n                token.safeApprove(to, 0);\\n            }\\n            token.safeApprove(to, type(uint256).max);\\n        }\\n    }\\n }\",\"keccak256\":\"0x27e47cb7ea7d3724a87afe95292d1288a1520ff92396b4f0a01552108e501440\",\"license\":\"Apache-2.0\"},\"src/lib/InitializableOwnable.sol\":{\"content\":\"/*\\n\\n    Copyright 2020 DODO ZOO.\\n    SPDX-License-Identifier: Apache-2.0\\n\\n*/\\n\\npragma solidity 0.8.4;\\n\\n/**\\n * @title Ownable\\n * @author DODO Breeder\\n *\\n * @notice Ownership related functions\\n */\\ncontract InitializableOwnable {\\n    address public _OWNER_;\\n    address public _NEW_OWNER_;\\n    bool internal _INITIALIZED_;\\n\\n    // ============ Events ============\\n\\n    event OwnershipTransferPrepared(address indexed previousOwner, address indexed newOwner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    // ============ Modifiers ============\\n\\n    modifier notInitialized() {\\n        require(!_INITIALIZED_, \\\"DODO_INITIALIZED\\\");\\n        _;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == _OWNER_, \\\"NOT_OWNER\\\");\\n        _;\\n    }\\n\\n    // ============ Functions ============\\n\\n    function initOwner(address newOwner) public notInitialized {\\n        _INITIALIZED_ = true;\\n        _OWNER_ = newOwner;\\n    }\\n\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        emit OwnershipTransferPrepared(_OWNER_, newOwner);\\n        _NEW_OWNER_ = newOwner;\\n    }\\n\\n    function claimOwnership() public {\\n        require(msg.sender == _NEW_OWNER_, \\\"INVALID_CLAIM\\\");\\n        emit OwnershipTransferred(_OWNER_, _NEW_OWNER_);\\n        _OWNER_ = _NEW_OWNER_;\\n        _NEW_OWNER_ = address(0);\\n    }\\n}\\n\",\"keccak256\":\"0x30c3f0690a4e66d35f52972a441566644ae1e0d1c5bef2036436562637db9a23\",\"license\":\"Apache-2.0\"},\"src/lib/SafeERC20.sol\":{\"content\":\"/*\\n\\n    Copyright 2020 DODO ZOO.\\n    SPDX-License-Identifier: Apache-2.0\\n    This is a simplified version of OpenZepplin's SafeERC20 library\\n\\n*/\\n\\npragma solidity 0.8.4;\\npragma experimental ABIEncoderV2;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {SafeMath} from \\\"./SafeMath.sol\\\";\\n\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n        );\\n    }\\n\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves.\\n\\n        // A Solidity high level call has three parts:\\n        //  1. The target address is checked to verify it contains contract code\\n        //  2. The call itself is made, and success asserted\\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\\n        // solhint-disable-next-line max-line-length\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        require(success, \\\"SafeERC20: low-level call failed\\\");\\n\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa05fad82feb4ca42a16b42a6a2ea2b12122761a328b29632d63f47813806750b\",\"license\":\"Apache-2.0\"},\"src/lib/SafeMath.sol\":{\"content\":\"/*\\n\\n    Copyright 2020 DODO ZOO.\\n    SPDX-License-Identifier: Apache-2.0\\n\\n*/\\n\\npragma solidity 0.8.4;\\npragma experimental ABIEncoderV2;\\n\\n\\n/**\\n * @title SafeMath\\n * @author DODO Breeder\\n *\\n * @notice Math operations with safety checks that revert on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"MUL_ERROR\\\");\\n\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"DIVIDING_ERROR\\\");\\n        return a / b;\\n    }\\n\\n    function divCeil(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 quotient = div(a, b);\\n        uint256 remainder = a - quotient * b;\\n        if (remainder > 0) {\\n            return quotient + 1;\\n        } else {\\n            return quotient;\\n        }\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SUB_ERROR\\\");\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"ADD_ERROR\\\");\\n        return c;\\n    }\\n\\n    function sqrt(uint256 x) internal pure returns (uint256 y) {\\n        uint256 z = x / 2 + 1;\\n        y = x;\\n        while (z < y) {\\n            y = z;\\n            z = (x / z + z) / 2;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x66ce291455c6a244d3cbb85df07d36802293bb2c4d112f6cecb91d6bcc105b05\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80634e71e0c811610097578063b074a78911610066578063b074a789146101ff578063bc2790c814610212578063f2fde38b14610225578063fd8bd8491461023857600080fd5b80634e71e0c8146101be5780638456db15146101c657806389143c25146101d9578063ae52aae7146101ec57600080fd5b80631822c0c0116100d35780631822c0c014610152578063272a16bd146101855780633b66b6151461019857806346e74298146101ab57600080fd5b806306552ff3146100fa5780630d0092971461010f57806316048bc414610122575b600080fd5b61010d610108366004610f6d565b61024b565b005b61010d61011d366004610f53565b610294565b600054610135906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610175610160366004610f53565b60056020526000908152604090205460ff1681565b6040519015158152602001610149565b61010d610193366004610fe0565b61031c565b600354610135906001600160a01b031681565b600454610135906001600160a01b031681565b61010d6105c1565b600154610135906001600160a01b031681565b61010d6101e736600461104d565b61066f565b61010d6101fa366004610f53565b6108eb565b600254610135906001600160a01b031681565b61010d610220366004610f53565b610970565b61010d610233366004610f53565b6109e8565b61010d610246366004610f53565b610a6d565b61025484610294565b600280546001600160a01b039485166001600160a01b03199182161790915560038054938516938216939093179092556004805491909316911617905550565b600154600160a01b900460ff16156102e65760405162461bcd60e51b815260206004820152601060248201526f1113d113d7d25392551250531256915160821b60448201526064015b60405180910390fd5b6001805460ff60a01b1916600160a01b179055600080546001600160a01b039092166001600160a01b0319909216919091179055565b3360009081526005602052604090205460ff1661036b5760405162461bcd60e51b815260206004820152600d60248201526c1050d0d154d4d7d11153925151609a1b60448201526064016102dd565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a082319060240160206040518083038186803b1580156103ad57600080fd5b505afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e59190611035565b6002546040519192506000916001600160a01b03909116906104089087906110cc565b6000604051808303816000865af19150503d8060008114610445576040519150601f19603f3d011682016040523d82523d6000602084013e61044a565b606091505b505090508061049b5760405162461bcd60e51b815260206004820152601b60248201527f455845435f444f444f5f4c494d49545f4f524445525f4552524f52000000000060448201526064016102dd565b6040516370a0823160e01b81523060048201526000906001600160a01b038616906370a082319060240160206040518083038186803b1580156104dd57600080fd5b505afa1580156104f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105159190611035565b905060006105238285610ae8565b9050848110156105755760405162461bcd60e51b815260206004820152601760248201527f54414b45525f414d4f554e545f4e4f545f454e4f55474800000000000000000060448201526064016102dd565b60035461058f906001600160a01b03888116911683610b37565b6040517fcb78302ec72136bfa852ed66b453ff3802e5959bb4df8386cd9695cae88de2e990600090a150505050505050565b6001546001600160a01b0316331461060b5760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f434c41494d60981b60448201526064016102dd565b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6002546001600160a01b031633146106b95760405162461bcd60e51b815260206004820152600d60248201526c1050d0d154d4d7d39153925151609a1b60448201526064016102dd565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a082319060240160206040518083038186803b1580156106fb57600080fd5b505afa15801561070f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107339190611035565b60045490915061074e9086906001600160a01b031688610b9f565b6000836001600160a01b03168360405161076891906110cc565b6000604051808303816000865af19150503d80600081146107a5576040519150601f19603f3d011682016040523d82523d6000602084013e6107aa565b606091505b50509050806107ed5760405162461bcd60e51b815260206004820152600f60248201526e10541257d4d5d05417d19052531151608a1b60448201526064016102dd565b6040516370a0823160e01b81523060048201526000906001600160a01b038716906370a082319060240160206040518083038186803b15801561082f57600080fd5b505afa158015610843573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108679190611035565b905060006108758285610ae8565b9050898110156108c75760405162461bcd60e51b815260206004820152601c60248201527f535741505f54414b45525f414d4f554e545f4e4f545f454e4f5547480000000060448201526064016102dd565b6002546108df9088906001600160a01b03168c610b9f565b50505050505050505050565b6000546001600160a01b031633146109155760405162461bcd60e51b81526004016102dd90611105565b6001600160a01b038116600081815260056020908152604091829020805460ff1916600117905590519182527f7048027520ecbaa8947764cd502c5c78c2c53bbd902e06b108da1cbdf98c6fc491015b60405180910390a150565b6000546001600160a01b0316331461099a5760405162461bcd60e51b81526004016102dd90611105565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f547e3f060aba0f7eec865fc52a952a5148e4903d709e38cde9c93b655ce0b05790602001610965565b6000546001600160a01b03163314610a125760405162461bcd60e51b81526004016102dd90611105565b600080546040516001600160a01b03808516939216917fdcf55418cee3220104fef63f979ff3c4097ad240c0c43dcb33ce837748983e6291a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610a975760405162461bcd60e51b81526004016102dd90611105565b6001600160a01b038116600081815260056020908152604091829020805460ff1916905590519182527f1785f53c768259a7ab38ed67e958aab075b56ff206e3d7f29ea4ca203d1a97749101610965565b600082821115610b265760405162461bcd60e51b815260206004820152600960248201526829aaa12fa2a92927a960b91b60448201526064016102dd565b610b308284611128565b9392505050565b6040516001600160a01b038316602482015260448101829052610b9a90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610c63565b505050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b158015610bea57600080fd5b505afa158015610bfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c229190611035565b905081811015610c5d578015610c4757610c476001600160a01b038516846000610d8c565b610c5d6001600160a01b03851684600019610d8c565b50505050565b600080836001600160a01b031683604051610c7e91906110cc565b6000604051808303816000865af19150503d8060008114610cbb576040519150601f19603f3d011682016040523d82523d6000602084013e610cc0565b606091505b509150915081610d125760405162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460448201526064016102dd565b805115610c5d5780806020019051810190610d2d9190610fc0565b610c5d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102dd565b801580610e155750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610ddb57600080fd5b505afa158015610def573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e139190611035565b155b610e805760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016102dd565b6040516001600160a01b038316602482015260448101829052610b9a90849063095ea7b360e01b90606401610b63565b80356001600160a01b0381168114610ec757600080fd5b919050565b600082601f830112610edc578081fd5b813567ffffffffffffffff80821115610ef757610ef761114b565b604051601f8301601f19908116603f01168101908282118183101715610f1f57610f1f61114b565b81604052838152866020858801011115610f37578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215610f64578081fd5b610b3082610eb0565b60008060008060808587031215610f82578283fd5b610f8b85610eb0565b9350610f9960208601610eb0565b9250610fa760408601610eb0565b9150610fb560608601610eb0565b905092959194509250565b600060208284031215610fd1578081fd5b81518015158114610b30578182fd5b600080600060608486031215610ff4578283fd5b833567ffffffffffffffff81111561100a578384fd5b61101686828701610ecc565b93505061102560208501610eb0565b9150604084013590509250925092565b600060208284031215611046578081fd5b5051919050565b60008060008060008060c08789031215611065578182fd5b863595506020870135945061107c60408801610eb0565b935061108a60608801610eb0565b925061109860808801610eb0565b915060a087013567ffffffffffffffff8111156110b3578182fd5b6110bf89828a01610ecc565b9150509295509295509295565b60008251815b818110156110ec57602081860181015185830152016110d2565b818111156110fa5782828501525b509190910192915050565b6020808252600990820152682727aa2fa7aba722a960b91b604082015260600190565b60008282101561114657634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fdfea264697066735822122001f3bb6f9463215641085452e8de4644d62e5bff9b393be652da6778edf6007264736f6c63430008040033",
  "devdoc": {
    "author": "DODO Breeder",
    "kind": "dev",
    "methods": {},
    "title": "DODOLimitOrderBot",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3619,
        "contract": "src/DODOLimitOrderBot.sol:DODOLimitOrderBot",
        "label": "_OWNER_",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3621,
        "contract": "src/DODOLimitOrderBot.sol:DODOLimitOrderBot",
        "label": "_NEW_OWNER_",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 3623,
        "contract": "src/DODOLimitOrderBot.sol:DODOLimitOrderBot",
        "label": "_INITIALIZED_",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 2901,
        "contract": "src/DODOLimitOrderBot.sol:DODOLimitOrderBot",
        "label": "_DODO_LIMIT_ORDER_",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 2903,
        "contract": "src/DODOLimitOrderBot.sol:DODOLimitOrderBot",
        "label": "_TOKEN_RECEIVER_",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 2905,
        "contract": "src/DODOLimitOrderBot.sol:DODOLimitOrderBot",
        "label": "_DODO_APPROVE_",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 2909,
        "contract": "src/DODOLimitOrderBot.sol:DODOLimitOrderBot",
        "label": "isAdminListed",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}